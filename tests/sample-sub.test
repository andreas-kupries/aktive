# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023,2024 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Sub sampling rows, columns, bands

kt check Tcl     8.6 9
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    x  {src args}
    xy {src args}
    y  {src args}
    z  {src args}
} {aktive op sample sub}

# # ## ### ##### ######## ############# #####################
##
# input/gradient 3x4x2
##
##       0 ....   1......   2...... - 3 columns
##     --------  --------  --------
#	 1  1.5    2  2.5    3  3.5  0
#	 4  4.5    5  5.5    6  6.5  1
#	 7  7.5    8  8.5    9  9.5  2
#	10 10.5   11 11.5   12 12.5  3
##     --- ----  --- ----  --- ----  \ 4 rows
##      0. 1...   0. 1...   0. 1... - 2 bands
#
# Downsampling columns, rows, or bands

foreach {op domain expected} {
    x {2 4 2} {
	=  1  1.5 =  3  3.5 =
	=  4  4.5 =  6  6.5 =
	=  7  7.5 =  9  9.5 =
	= 10 10.5 = 12 12.5 =
    }
    y {3 2 2} {
	=  1  1.5 =  2  2.5 =  3  3.5 =
	=  7  7.5 =  8  8.5 =  9  9.5 =
    }
    z {3 4 1} {
	=  1 =  2 =  3 =
	=  4 =  5 =  6 =
	=  7 =  8 =  9 =
	= 10 = 11 = 12 =
    }
    xy {2 2 2} {
	= 1 1.5 = 3 3.5 =
	= 7 7.5 = 9 9.5 =
    }
} {
    set opd $op ; if {$op eq "xy"} { set opd y }

    test aktive-op-sample-sub-${op}-2.0 "aktive op sample sub $op 2x" -body {
	astcl aktive op sample sub $op [grad] by 2
    } -match image -result [makei op::sample::sub::$opd 0 0 {*}$domain {by 2} $expected]

    test aktive-op-sample-sub-${op}-2.1 "aktive op sample sub $op, dag" -body {
	dag aktive op sample sub $op [grad] by 2
    } -match glob -result "op::sample::sub::$opd * {by 2} {image::gradient *}"

    set in [grad]
    set id [aktive query id $in]

    test aktive-op-sample-sub-${op}-2.2 "aktive op sample sub $op, 1x is identity" -body {
	dag aktive op sample sub $op $in by 1
    } -match glob -result "image::gradient $id *"

    # do not have simplifications for xy chaining yet
    if {$op ne "xy"} {
	test aktive-op-sample-sub-${op}-2.3 "aktive op sample sub $op, sample fill $op, same factor, identity" -body {
	    dag aktive op sample sub $op [aktive op sample fill $op $in by 5 fill 0] by 5
	} -match glob -result "image::gradient $id *"

	test aktive-op-sample-sub-${op}-2.4 "aktive op sample sub $op, sample replicate ${op}, same factor, identity" -body {
	    dag aktive op sample sub $op [aktive op sample replicate ${op} $in by 5] by 5
	} -match glob -result "image::gradient $id *"
    }

    unset in id

    # Not testing chain reduction for z here, not enough bands in the standard gradient input.
    # And xy does not reduce due to the alternating x/y/x/y structure
    if {$op in {xy z}} continue

    test aktive-op-sample-sub-${op}-2.5 "aktive op sample sub $op, chain reduction, multiplies" -body {
	dag aktive op sample sub $op [aktive op sample sub $op [grad] by 2] by 3
    } -match glob -result "op::sample::sub::$op * {by 6} {image::gradient *}"
}

# # ## ### ##### ######## ############# #####################
cleanupTests
return
