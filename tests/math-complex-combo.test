# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Complex transformers - Combinations

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    as-real       src
    as-imaginary  src
    cons         {src0 src1}
} {aktive op cmath}

# # ## ### ##### ######## ############# #####################
##

set real      [gradx]
set imaginary [aktive op flip x $real]

foreach {op vars expected} {
    as-real real {
	0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0
    }
    as-imaginary real {
	0 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19
    }
    cons {real imaginary} {
	0 19 1 18 2 17 3 16 4 15 5 14 6 13 7 12 8 11 9 10 10 9 11 8 12 7 13 6 14 5 15 4 16 3 17 2 18 1 19 0
    }
} {
    # functions to debug ...
    if {![llength $expected] || ($op in {})} {
	puts   "\nXX $op ........................................................................"
	puts   "XX INPUT [pixels/ $a]"
	puts   "XX RESLT [4f [pixels/ [aktive op cmath $op $a]]]"
	puts   "XX EXP.. $expected\n"
    }

    test aktive-op-cmath-${op}-2.0 "aktive op cmath $op" -body {
	pixels aktive op cmath $op {*}[lmap v $vars { set $v }]
    } -match pixels -result $expected
}

unset real imaginary
##
# # ## ### ##### ######## ############# #####################
cleanupTests
return
