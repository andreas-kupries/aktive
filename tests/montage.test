# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Image montage (adjoin rows, columns, bands)

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    x       args
    x-core {src0 src1}
    x-rep  {n src}
    y       args
    y-core {src0 src1}
    y-rep  {n src}
    z       args
    z-core {src0 src1}
    z-rep  {n src}
} {aktive op montage}

# # ## ### ##### ######## ############# #####################

set a [aktive op select x 0 4 [gradx]]
set b [aktive op select y 0 4 [grady]]

foreach {op w h d expected} {
    x 6 5 1 {
	= 0 1 2 3 4 0 =
	= 0 0 0 0 0 1 =
	= 0 0 0 0 0 2 =
	= 0 0 0 0 0 3 =
	= 0 0 0 0 0 4 =
    }
    y 5 6 1 {
	= 0 1 2 3 4 =
	= 0 0 0 0 0 =
	= 1 0 0 0 0 =
	= 2 0 0 0 0 =
	= 3 0 0 0 0 =
	= 4 0 0 0 0 =
    }
    z 5 5 2 {
	= 0 0 = 1 0 = 2 0 = 3 0 = 4 0 =
	= 0 1 = 0 0 = 0 0 = 0 0 = 0 0 =
	= 0 2 = 0 0 = 0 0 = 0 0 = 0 0 =
	= 0 3 = 0 0 = 0 0 = 0 0 = 0 0 =
	= 0 4 = 0 0 = 0 0 = 0 0 = 0 0 =
    }
} {
    test aktive-op-montage-${op}-2.0 "aktive op montage $op" -body {
	astcl aktive op montage $op $a $b
    } -match image -result [makei op::montage::${op}-core 0 0 $w $h $d {} $expected]

    test aktive-op-montage-${op}-2.1 "aktive op montage $op, dag" -body {
	dag aktive op montage $op $a $b
    } -match glob -result "op::montage::${op}-core * {} {*} {*}"

    test aktive-op-montage-${op}-core-2.0 "aktive op montage ${op}-core" -body {
	astcl aktive op montage ${op}-core $a $b
    } -match image -result [makei op::montage::${op}-core 0 0 $w $h $d {} $expected]

    test aktive-op-montage-${op}-core-2.1 "aktive op montage ${op}-core, dag" -body {
	dag aktive op montage ${op}-core $a $b
    } -match glob -result "op::montage::${op}-core * {} {*} {*}"
}

foreach {op w h d expected} {
    x 10 1 1 {
	= 0 1 2 3 4 = 0 1 2 3 4 =
    }
    y 5 2 1 {
	= 0 1 2 3 4 =
	= 0 1 2 3 4 =
    }
    z 5 1 2 {
	= 0 0 1 1 2 2 3 3 4 4 =
    }
} {
    test aktive-op-montage-${op}-rep-2.0 "aktive op montage ${op}-rep" -body {
	astcl aktive op montage ${op}-rep 2 $a
    } -match image -result [makei op::montage::${op}-core 0 0 $w $h $d {} $expected]
}

unset a
unset b
# # ## ### ##### ######## ############# #####################
cleanupTests
return
