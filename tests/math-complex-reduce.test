# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023,2024 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Complex transformers - Reductions to scalar

kt check Tcl     8.6 9
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    real      src
    imaginary src
    abs       src
    sqabs     src
    arg       src
} {aktive op cmath}

# # ## ### ##### ######## ############# #####################
##

set real      [gradx]
set imaginary [aktive op flip x $real]
set a         [aktive op montage z $real $imaginary]

foreach {op expected} {
    abs       {
	19 18.0278 17.1172 16.2788 15.5242 14.8661 14.3178 13.8924 13.6015 13.4536
	13.4536 13.6015 13.8924 14.3178 14.8661 15.5242 16.2788 17.1172 18.0278 19
    }
    sqabs {
	361 325 293 265 241 221 205 193 185 181
	181 185 193 205 221 241 265 293 325 361
    }
    arg {
	1.5708 1.5153 1.45369 1.3854 1.3102 1.2278 1.1384 1.0427 0.9420 0.83798
	0.7328 0.6288 0.5281 0.4324 0.3430 0.2606 0.1854 0.1171 0.0555 0
    }
} {
    # functions to debug ...
    if {![llength $expected] || ($op in {})} {
	puts   "\nXX $op ........................................................................"
	puts   "XX INPUT [pixels/ $a"
	puts   "XX RESLT [pixels/ [aktive op cmath $op $a]]"
	puts   "XX EXP.. $expected\n"
    }

    test aktive-op-cmath-${op}-2.0 "aktive op cmath $op" -body {
	astcl aktive op cmath $op $a
    } -match image -result [makei op::cmath::$op 0 0 20 1 1 {} $expected]
}

foreach op {
    real
    imaginary
} {
    # functions to debug ...
    if {![llength $expected] || ($op in {})} {
	puts   "\nXX $op ........................................................................"
	puts   "XX INPUT [pixels/ $a]"
	puts   "XX RESLT [pixels/ [aktive op cmath $op $a]]"
	puts   "XX EXP.. $expected\n"
    }

    test aktive-op-cmath-${op}-2.0 "aktive op cmath $op, core" -body {
	astcl aktive op cmath $op $a
    } -match glob -result "type op::select::z domain {*} *"

    test aktive-op-cmath-${op}-2.1 "aktive op cmath $op, pixels" -body {
	pixels aktive op cmath $op $a
    } -match pixels -result [pixels/ [set $op]]
    # note: op names match the variable names holding the bands
}

unset real imaginary a
##
# # ## ### ##### ######## ############# #####################
cleanupTests
return
