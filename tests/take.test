# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Take operation - Value selection along an axis by index.

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    x {src0 src1}
    y {src0 src1}
    z {src0 src1}
} {aktive op take}

# # ## ### ##### ######## ############# #####################
## take x - column selection
#       y - row    selection
#       z - band   selection

set input [aktive op montage z \
	       [aktive image from matrix width 4  height 2 values 0 4 7 19  10 13 16 22] \
	       [aktive image from matrix width 4  height 2 values 1 5 8 20  11 14 17 23] \
	       [aktive image from matrix width 4  height 2 values 2 6 9 21  12 15 18 24]]
#
#     c0 c1 c2 c3   c0 c1 c2 c3   c0 c1 c2 c3
# r0 ( 0  4  7 19) ( 1  5  8 20) ( 2  6  9 21)
# r1 (10 13 16 22) (11 14 17 23) (12 15 18 24)
#    b0            b1            b2
#
#     b0 b1 b2   b0 b1 b2   b0 b1 b2   b0 b1 b2
# r0 ( 0  1  2) ( 4  5  6) ( 7  8  9) (19 20 21)
# r1 (10 11 12) (13 14 15) (16 17 18) (22 23 24)
#    c0         c1         c2         c3

set index_x [aktive op montage z \
		 [aktive image from matrix width 1 height 2 values 0 2] \
		 [aktive image from matrix width 1 height 2 values 3 1] \
		 [aktive image from matrix width 1 height 2 values 2 0]]
# single column
#     b0 b1 b2
# r0 (0 3 2)
# r1 (2 1 0)
#    c0
#
# yields XXX TODO XXX
#     b0 b1 b2
# r0 ( 0 19  9)
# r1 (16 14 12)
#    c0

set index_y [aktive op montage z \
		 [aktive image from matrix width 4 height 1 values 0 1 0 0] \
		 [aktive image from matrix width 4 height 1 values 1 1 0 1] \
		 [aktive image from matrix width 4 height 1 values 1 0 1 0]]
# single row
#    b0 b1 b2 b0 b1 b2 b0 b1 b2 b0 b1 b2
# r0 (0 1 1)  (1 1 0)  (0 0 1)  (0 1 0)
#    c0       c1       c2       c3
#
# yields
#     b0 b1 b2   b0 b1 b2   b0 b1 b2   b0 b1 b2
# r0 ( 0 11 12) (13 14  6) ( 7  8 18) (19 23 21)
#    c0         c1         c2         c3

set index_z [aktive image from matrix width 4 height 2 values 0 1 2 1   2 1 0 2]
#
# single-band
# (0) (1) (2) (1)
# (2) (1) (0) (2)
#
# yields
#     b0   b0   b0   b0
# r0 ( 0) ( 5) ( 9) (20)
# r1 (12) (14) (16) (24)
#    c0   c1   c2    c3


foreach {op config w h d expected} {
    x {} 1 2 3 {
	=  0 20  9
	= 16 14 12
    }
    y {} 4 1 3 {
	= 0 11 12 = 13 14 6 = 7 8 18 = 19 23 21 =
    }
    z {} 4 2 1 {
	=  0  5  9 20
	= 12 14 16 24
    }
} {
    test aktive-op-take-${op}-2.0 "aktive op take $op" -body {
	astcl aktive op take $op [set index_$op] $input
    } -match image -result [makei op::take::$op 0 0 $w $h $d $config $expected]
}

# # ## ### ##### ######## ############# #####################
unset input
cleanupTests
return
