# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Binary transformers

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    add        {src0 src1}
    atan2      {src0 src1}
    difference {a b}
    div        {src0 src1}
    ge         {src0 src1}
    gt         {src0 src1}
    hypot      {src0 src1}
    le         {src0 src1}
    lt         {src0 src1}
    max        {src0 src1}
    min        {src0 src1}
    mod        {src0 src1}
    mul        {src0 src1}
    pow        {src0 src1}
    screen     {a b}
    sub        {src0 src1}
} {aktive op math}

# # ## ### ##### ######## ############# #####################
##

foreach {op expected} {
    add     {19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19 19}
    atan2   {0 0.0555 0.1171 0.1854 0.2606 0.3430 0.4324 0.5281 0.6288 0.7328 0.83798 0.9420 1.0427 1.1384 1.2278 1.3102 1.3854 1.45369 1.5153}
    div     {0 0.0556 0.1176 0.1875 0.2667 0.3571 0.4615 0.5833 0.7273 0.9 1.1111 1.375 1.7143 2.1667 2.8 3.75 5.3333 8.5 18}
    ge      {0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1}
    gt      {0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1}
    hypot   {19 18.0278 17.1172 16.2788 15.5242 14.8661 14.3178 13.8924 13.6015 13.4536 13.4536 13.6015 13.8924 14.3178 14.8661 15.5242 16.2788 17.1172 18.0278}
    le      {1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0}
    lt      {1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0}
    max     {19 18 17 16 15 14 13 12 11 10 10 11 12 13 14 15 16 17 18}
    min     {0 1 2 3 4 5 6 7 8 9 9 8 7 6 5 4 3 2 1}
    mod     {0 1 2 3 4 5 6 7 8 9 1 3 5 1 4 3 1 1 0}
    mul     {0 18 34 48 60 70 78 84 88 90 90 88 84 78 70 60 48 34 18}
    pow     {0 1 131072 43046721 1073741824 6103515625 13060694016 13841287201 8589934592 3486784401 1000000000 214358881 35831808 4826809 537824 50625 4096 289 18}
    sub     {-19 -17 -15 -13 -11 -9 -7 -5 -3 -1 1 3 5 7 9 11 13 15 17}
} {
    # functions to debug ...
    if {![llength $expected] || ($op in {})} {
	puts   "\nXX $op ........................................................................"
	puts   "XX INPUT [dict get [astcl/ [gradx]] pixels]"
	puts   "XX INPUT [dict get [astcl/ [aktive op flip x [gradx]]] pixels]"
	puts   "XX RESLT [dict get [astcl/ [aktive op math $op [gradx] [aktive op flip x [gradx]]]] pixels]"
	puts   "XX EXP.. $expected\n"
    }

    test aktive-op-math-${op}-2.0 "aktive op math $op, core" -body {
	set x [astcl aktive op math $op [gradx] [aktive op flip x [gradx]]]
	dict unset x pixels
	set x
    } -cleanup {
	unset x
    } -result "type op::math::$op domain {x 0 y 0 width 20 height 1 depth 1}"

    test aktive-op-math-${op}-2.1 "aktive op math $op, pixels" -body {
	dict get [astcl aktive op select x 0 18 [aktive op math $op [gradx] [aktive op flip x [gradx]]]] pixels
    } -match pixels -result $expected

    test aktive-op-math-${op}-2.2 "aktive op math $op, dag" -body {
	dag aktive op math $op [gradx] [aktive op flip x [gradx]]
    } -match glob -result "op::math::$op * {} {image::gradient *} {*}"
}

# # ## ### ##### ######## ############# #####################
## Highlevel ops - Just check results

foreach {op expected} {
    difference {19 17 15 13 11 9 7 5 3 1 1 3 5 7 9 11 13 15 17 19}
    screen     {19 1 -15 -29 -41 -51 -59 -65 -69 -71 -71 -69 -65 -59 -51 -41 -29 -15 1 19}
} {
    # functions to debug ...
    if {![llength $expected] || ($op in {})} {
	puts   "\nXX $op ........................................................................"
	puts   "XX INPUT [dict get [astcl/ [gradx]] pixels]"
	puts   "XX INPUT [dict get [astcl/ [aktive op flip x [gradx]]] pixels]"
	puts   "XX RESLT [dict get [astcl/ [aktive op math $op [gradx] [aktive op flip x [gradx]]]] pixels]"
	puts   "XX EXP.. $expected\n"
    }

    test aktive-op-math-${op}-2.1 "aktive op math $op, pixels" -body {
	#dict get [astcl aktive op select x 0 18 [aktive op math $op [gradx] [aktive op flip x [gradx]]]] pixels
	dict get [astcl aktive op math $op [gradx] [aktive op flip x [gradx]]] pixels
    } -match pixels -result $expected
}

##
# # ## ### ##### ######## ############# #####################
cleanupTests
return
