# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Column statistics (min, max, mean, sum, sum squared, variance, std deviation)

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    max        src
    mean       src
    median     src
    min        src
    rank      {src args}
    stddev     src
    sum        src
    sumsquared src
    variance   src
} {aktive op column}

# # ## ### ##### ######## ############# #####################
##
## =  1.00  1.50 =  2.00  2.50 =  3.00  3.50
## =  4.00  4.50 =  5.00  5.50 =  6.00  6.50
## =  7.00  7.50 =  8.00  8.50 =  9.00  9.50
## = 10.00 10.50 = 11.00 11.50 = 12.00 12.50

foreach {op config expected} {
    max        {}        { =  10       10.5    =  11       11.5    =  12       12.5    = }
    mean       {}        { =   5.5      6      =   6.5      7      =   7.5      8	     = }
    median     {rank -1} { =   7        7.5    =   8        8.5    =   9        9.5    = }
    min        {}        { =   1        1.5    =   2        2.5    =   3        3.5    = }
    stddev     {}        { =   3.3541   3.3541 =   3.3541   3.3541 =   3.3541   3.3541 = }
    sum        {}        { =  22       24      =  26       28      =  30       32      = }
    sumsquared {}        { = 166      189      = 214      241      = 270      301      = }
    variance   {}        { =  11.25    11.25   = 11.25     11.25   =  11.25    11.25   = }
} {
    set actual $op
    if {$op eq "median"} { set actual rank }

    test aktive-op-column-${op}-2.0 "aktive op column $op" -body {
	astcl aktive op column $op [grad]
    } -match image -result [makei op::column::$actual 0 0 3 1 2 $config $expected]

    test aktive-op-column-${op}-2.1 "aktive op column $op, dag" -body {
	dag aktive op column $op [grad]
    } -match glob -result "op::column::$actual * {$config} {image::gradient *}"

    if {$op in {
	max min mean sum median
    }} {
	# confirm idempotent operations, and simplification

        test aktive-op-column-${op}-2.2 "aktive op column $op, idem potent" -body {
	    astcl aktive op column $op [aktive op pass [aktive op column $op [grad]]]
	} -match image -result [makei op::column::$actual 0 0 3 1 2 $config $expected]

	set in [aktive op column $op [grad]]
	set id [aktive query id $in]

        test aktive-op-column-${op}-2.3 "aktive op column $op, reduction, dag" -body {
	    dag aktive op column $op $in
	} -match glob -result "op::column::$actual $id {$config} {image::gradient *}"
    }

    if {$op in {
	sumsquared
    }} {
	# confirm squarings, and simplifications

        test aktive-op-column-${op}-2.2 "aktive op column $op, chain squared" -body {
	    pixels aktive op column $op \
		[aktive op pass \
		     [aktive op column $op [grad]]]
	} -match pixels -result [pixels aktive op math1 pow [aktive op column $op [grad]] exponent 2]
	# squared (makei op::column::$actual 0 0 3 1 2 {} $expected)

        test aktive-op-column-${op}-2.3 "aktive op column $op, chain squared twice" -body {
	    pixels aktive op column $op \
		[aktive op pass \
		     [aktive op column $op  \
			  [aktive op pass \
			       [aktive op column $op [grad]]]]]
	} -match pixels -result [pixels aktive op math1 pow [aktive op column $op [grad]] exponent 4]
	# double squared ( [makei op::column::$actual 0 0 3 1 2 {} $expected])

	test aktive-op-column-${op}-2.4 "aktive op column $op, squared, reduced, dag" -body {
	    dag aktive op column $op [aktive op column $op [grad]]
	} -match glob -result "op::math1::pow * {exponent 2.0} {op::column::$actual * {} {image::gradient *}}"

        test aktive-op-column-${op}-2.5 "aktive op column $op, squared 2x, reduced, dag" -body {
	    dag aktive op column $op \
		[aktive op column $op  \
		     [aktive op column $op [grad]]]
	} -match glob -result "op::math1::pow * {exponent 4.0} {op::column::$actual * {} {image::gradient *}}"
    }

    if {$op in {
	variance stddev
    }} {
	# confirm const results, and simplifications

        test aktive-op-column-${op}-2.2 "aktive op column $op, chain const" -body {
	    pixels aktive op column $op \
		[aktive op pass \
		     [aktive op column $op [grad]]]
	} -match pixels -result [pixels aktive image from value width 3 height 1 depth 2 value 0]

	test aktive-op-column-${op}-2.3 "aktive op column $op, chain const, reduced dag" -body {
	    dag aktive op column $op [aktive op column $op [grad]]
	} -match glob -result "image::from::value * {width 3 height 1 depth 2 value 0.0}"
    }
}

# # ## ### ##### ######## ############# #####################
cleanupTests
return
