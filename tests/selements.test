# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Patterns for structuring elements

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    cbar   args
    circle args
    cross  args
    dbar   args
    disc   args
    hbar   args
    vbar   args
    xcross args
} {aktive image}

# # ## ### ##### ######## ############# #####################
##

foreach {op expected} {
    cbar   {
	0 0 0 0 0 0 0 0 0 0 1
	0 0 0 0 0 0 0 0 0 1 0
	0 0 0 0 0 0 0 0 1 0 0
	0 0 0 0 0 0 0 1 0 0 0
	0 0 0 0 0 0 1 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 1 0 0 0 0 0 0
	0 0 0 1 0 0 0 0 0 0 0
	0 0 1 0 0 0 0 0 0 0 0
	0 1 0 0 0 0 0 0 0 0 0
	1 0 0 0 0 0 0 0 0 0 0
    }
    circle {
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 1 1 1 1 1 0 0 0
	0 0 1 0 0 0 0 0 1 0 0
	0 1 0 0 0 0 0 0 0 1 0
	0 1 0 0 0 0 0 0 0 1 0
	0 1 0 0 0 0 0 0 0 1 0
	0 1 0 0 0 0 0 0 0 1 0
	0 1 0 0 0 0 0 0 0 1 0
	0 0 1 0 0 0 0 0 1 0 0
	0 0 0 1 1 1 1 1 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
    }
    cross  {
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	1 1 1 1 1 1 1 1 1 1 1
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
    }
    dbar   {
	1 0 0 0 0 0 0 0 0 0 0
	0 1 0 0 0 0 0 0 0 0 0
	0 0 1 0 0 0 0 0 0 0 0
	0 0 0 1 0 0 0 0 0 0 0
	0 0 0 0 1 0 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 0 1 0 0 0 0
	0 0 0 0 0 0 0 1 0 0 0
	0 0 0 0 0 0 0 0 1 0 0
	0 0 0 0 0 0 0 0 0 1 0
	0 0 0 0 0 0 0 0 0 0 1
    }
    disc   {
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 1 1 1 1 1 0 0 0
	0 0 1 1 1 1 1 1 1 0 0
	0 1 1 1 1 1 1 1 1 1 0
	0 1 1 1 1 1 1 1 1 1 0
	0 1 1 1 1 1 1 1 1 1 0
	0 1 1 1 1 1 1 1 1 1 0
	0 1 1 1 1 1 1 1 1 1 0
	0 0 1 1 1 1 1 1 1 0 0
	0 0 0 1 1 1 1 1 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
    }
    hbar   {
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	1 1 1 1 1 1 1 1 1 1 1
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0
    }
    vbar   {
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
    }
    xcross {
	1 0 0 0 0 0 0 0 0 0 1
	0 1 0 0 0 0 0 0 0 1 0
	0 0 1 0 0 0 0 0 1 0 0
	0 0 0 1 0 0 0 1 0 0 0
	0 0 0 0 1 0 1 0 0 0 0
	0 0 0 0 0 1 0 0 0 0 0
	0 0 0 0 1 0 1 0 0 0 0
	0 0 0 1 0 0 0 1 0 0 0
	0 0 1 0 0 0 0 0 1 0 0
	0 1 0 0 0 0 0 0 0 1 0
	1 0 0 0 0 0 0 0 0 0 1
    }
} {
    set config {radius 5}
    if {$op eq "circle"} {
	lappend config width 1
    } elseif {$op ne "disc"} {
	lappend config width 0
    }

    test aktive-image-${op}-2.0 "aktive image $op, $config" -body {
	astcl aktive image $op radius 5
    } -match image -result [makei image::$op 0 0 11 11 1 $config $expected]
}

# # ## ### ##### ######## ############# #####################
cleanupTests
return
