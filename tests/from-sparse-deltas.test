# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023,2024 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Images from sparse deltas

kt check Tcl     8.6 9
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax -- args issue

syntax {
    deltas args
} {aktive image from sparse}

# # ## ### ##### ######## ############# #####################
##

set expected {
    1 0 0 0 0 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 0 1
    0 0 0 0 1 0 0
    0 0 0 0 0 0 0
    0 0 0 0 0 1 0
}

test aktive-image-from-sparse-deltas-2.0 "aktive image from sparse deltas" -body {
    astcl aktive image from sparse deltas width 7 deltas 0 20 5 15
    #      0 20  5 15
    # ->   0 20 25 40
    # x %7 0  6  4  5
    # y /7 0  2  3  5
} -match image -result [makei image::from::sparse::deltas \
			    0 0 7 6 1 {width 7 deltas {0 20 5 15}} \
			    $expected]

test aktive-image-from-sparse-deltas-2.1 "aktive image from sparse deltas, dag" -body {
    dag aktive image from sparse deltas width 7 deltas 0 20 5 15
} -match glob -result {image::from::sparse::deltas * {width 7 deltas {0 20 5 15}}}

# - -- --- ----- -------- ------------- ---------------------
## Slice and check in all directions

lassign {7 6 1} w h d

for {set row 0} {$row < $h} {incr row} {
    test aktive-image-from-sparse-deltas-2.2.r$row "aktive image from sparse deltas, row slice" -body {
	pixels aktive op select y [aktive image from sparse deltas width 7 deltas 0 20 5 15] from $row
    } -match pixels -result [slice-row $row $w $h $d $expected]
}

for {set col 0} {$col < $w} {incr col} {
    test aktive-image-from-sparse-deltas-2.2.c$col "aktive image from sparse deltas, column slice" -body {
	pixels aktive op select x [aktive image from sparse deltas width 7 deltas 0 20 5 15] from $col
    } -match pixels -result [slice-col $col $w $h $d $expected]
}

for {set band 0} {$band < $d} {incr band} {
    test aktive-image-from-sparse-deltas-2.2.b$band "aktive image from sparse deltas, band slice" -body {
	pixels aktive op select z [aktive image from sparse deltas width 7 deltas 0 20 5 15] from $band
    } -match pixels -result [slice-band $band $w $h $d $expected]
}

# - -- --- ----- -------- ------------- ---------------------
unset w h d row col band

# # ## ### ##### ######## ############# #####################
cleanupTests
return
