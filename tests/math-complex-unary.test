# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Complex transformers - Unary

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    acos        src
    acosh       src
    asin        src
    asinh       src
    atan        src
    atanh       src
    cbrt        src
    conjugate   src
    cos         src
    cosh        src
    exp         src
    exp10       src
    exp2        src
    log         src
    log10       src
    log2        src
    neg         src
    reciproc    src
    sign        src
    sin         src
    sinh        src
    sqrt        src
    tan         src
    tanh        src
    tocartesian src
    topolar     src
} {aktive op cmath}

# # ## ### ##### ######## ############# #####################
##

set real      [gradx]
set imaginary [aktive op flip x $real]
set a         [aktive op montage z $real $imaginary]

foreach {op expected} {
    acos {
	1.5708 -3.6383 1.5154 -3.5858 1.4539 -3.5341 1.3858 -3.4839 1.3107 -3.4364
	1.2285 -3.3931 1.1393 -3.3554 1.0438 -3.3251 0.9433 -3.3037 0.8394 -3.2925
	0.7342 -3.2923 0.6301 -3.3029 0.5292 -3.3239 0.4333 -3.3539 0.3437 -3.3914
	0.2611 -3.4346 0.1857 -3.4821 0.1173 -3.5324 0.0556 -3.5843 0.0000 -3.6369
    }
    acosh {
	3.6383 1.5708 3.5858 1.5154 3.5341 1.4539 3.4839 1.3858 3.4364 1.3107
	3.3931 1.2285 3.3554 1.1393 3.3251 1.0438 3.3037 0.9433 3.2925 0.8394
	3.2923 0.7342 3.3029 0.6301 3.3239 0.5292 3.3539 0.4333 3.3914 0.3437
	3.4346 0.2611 3.4821 0.1857 3.5324 0.1173 3.5843 0.0556 3.6369 0.0000
    }
    asin {
	0      3.6383 0.0554 3.5858 0.1169 3.5341 0.1850 3.4839 0.2601 3.4364
	0.3423 3.3931 0.4315 3.3554 0.5269 3.3251 0.6275 3.3037 0.7314 3.2925
	0.8366 3.2923 0.9407 3.3029 1.0416 3.3239 1.1375 3.3539 1.2271 3.3914
	1.3097 3.4346 1.3851 3.4821 1.4535 3.5324 1.5152 3.5843 1.5708 3.6369
    }
    asinh {
	3.6369 1.5708 3.5843 1.5152 3.5324 1.4535 3.4821 1.3851 3.4346 1.3097
	3.3914 1.2271 3.3539 1.1375 3.3239 1.0416 3.3029 0.9407 3.2923 0.8366
	3.2925 0.7314 3.3037 0.6275 3.3251 0.5269 3.3554 0.4315 3.3931 0.3423
	3.4364 0.2601 3.4839 0.1850 3.5341 0.1169 3.5858 0.0554 3.6383 0
    }
    atan {
	1.5708 0.0527 1.5677 0.0554 1.5639 0.0581 1.5594 0.0604 1.5541 0.0623
	1.5481 0.0634 1.5414 0.0634 1.5344 0.0622 1.5274 0.0594 1.5210 0.0552
	1.5155 0.0496 1.5113 0.0431 1.5086 0.0361 1.5074 0.0292 1.5075 0.0225
	1.5086 0.0165 1.5105 0.0113 1.5128 0.0068 1.5155 0.0031 1.5182 0
    }
    atanh {
	0      1.5182 0.0031 1.5155 0.0068 1.5128 0.0113 1.5105 0.0165 1.5086
	0.0225 1.5075 0.0292 1.5074 0.0361 1.5086 0.0431 1.5113 0.0496 1.5155
	0.0552 1.5210 0.0594 1.5274 0.0622 1.5344 0.0634 1.5414 0.0634 1.5481
	0.0623 1.5541 0.0604 1.5594 0.0581 1.5639 0.0554 1.5677 0.0527 1.5708
    }
    cbrt {
	2.3109 1.3342 2.2947 1.2688 2.2805 1.2005 2.2689 1.1293 2.2605 1.0552
	2.2558 0.9784 2.2555 0.8995 2.2602 0.8188 2.2703 0.7373 2.2862 0.6557
	2.3078 0.5752 2.3348 0.4967 2.3668 0.4210 2.4031 0.3488 2.4428 0.2805
	2.4852 0.2164 2.5296 0.1565 2.5752 0.1006 2.6216 0.0485 2.6684 0
    }
    conjugate {
	=  0 -19 =  1 -18 =  2 -17 =  3 -16 =  4 -15 =
	=  5 -14 =  6 -13 =  7 -12 =  8 -11 =  9 -10 =
	= 10  -9 = 11  -8 = 12  -7 = 13  -6 = 14  -5 =
	= 15  -4 = 16  -3 = 17  -2 = 18  -1 = 19   0 =
    }
    cos {
	= 89241150.4816       0      17738116.3641 -27625479.4462 -5026003.5877 -10982018.1920 -4398591.3696 -627003.9941
	= -1068386.1760 1237000.2523   170566.6797    576603.2204   212396.0967     61808.5792    61350.6021  -53463.8584
	=    -4355.8448  -29618.4879   -10034.4898     -4538.7568    -3399.5336      2204.1243        6.5964    1490.4642
	=      462.6995     294.2116      183.0462       -84.7532       10.1473       -73.5062      -20.7457     -17.7463
	=       -9.6414       2.8842       -1.0352         3.4869        1.0189         0.8826        0.9887       0
    }
    cosh {
	=        0.9887      0             1.0189       -0.8826       -1.0352       -3.4869       -9.6414       -2.8842
	=      -20.7457     17.7463       10.1473       73.5062      183.0462       84.7532      462.6995     -294.2116
	=        6.5964  -1490.4642    -3399.5336    -2204.1243   -10034.4898     4538.7568    -4355.8448    29618.4879
	=    61350.6021  53463.8584   212396.0967   -61808.5792   170566.6797  -576603.2204 -1068386.1760 -1237000.2523
	= -4398591.3696 627003.9941 -5026003.5877 10982018.1920 17738116.3641 27625479.4462 89241150.4816        0
    }
    exp {
	=        0.9887       0.1499         1.7949       -2.0414       -2.0332       -7.1038       -19.2351       -5.7827
	=      -41.4776      35.5045        20.2936      147.0192      366.0902      169.5075       925.3982     -588.4237
	=       13.1928   -2980.9288     -6799.0670    -4408.2487   -20068.9795     9077.5137     -8711.6896    59236.9759
	=   122701.2042  106927.7168    424792.1934  -123617.1583   341133.3595 -1153206.4409  -2136772.3520 -2474000.5047
	= -8797182.7393 1254007.9883 -10052007.1753 21964036.3839 35476232.7281 55250958.8924 178482300.9632        0
    }
    exp10 {
	=                   0.9729                -0.2311                   -8.2203                 -5.6944
	=                  12.5629                99.2077                  654.1407               -756.3729
	=               -9998.2436               187.4170                68202.7601              73132.6433
	=               88360.6133           -996088.5513             -8001129.9126            5998493.1543
	=            98091280.4898          19444811.4385           -510781843.9369         -859710362.7993
	=         -2983024059.0486        9544714111.1265          90943408017.4914       -41584811387.8626
	=       -917068045677.9755     -398730735705.6689        3161384259636.8906      9487130733942.7363
	=      49457969836172.4531   -86913228105302.1250     -977096228673239.6250    212797932115291.2188
	=    8112146528397083       5847484818433977        -10701348355876988      -99425756941379072
	= -668201510190316928     743980336957497216      10000000000000032768                       0
    }
    exp2 {
	=       0.8234    0.5675      1.9920    -0.1792     2.8356     -2.8213      0.7571     -7.9641     -9.0127   -13.2201
	=    -30.7601    -8.8213    -58.5967    25.7376   -57.2590    114.4788     58.2034    249.2957    408.1252   309.1566
	=   1022.9698   -45.9219   1515.1316 -1377.9260   570.1136  -4056.1295  -4306.3122  -6968.8263 -15530.7859 -5218.2511
	= -30562.2901 11818.9782 -31915.6662 57239.4754 24046.0726 128847.4120 201651.3626 167499.8648 524288          0
    }
    log {
	2.9444 1.5708 2.8919 1.5153 2.8401 1.4537 2.7899 1.3854 2.7424 1.3102
	2.6991 1.2278 2.6615 1.1384 2.6313 1.0427 2.6102 0.9420 2.5992 0.8380
	2.5992 0.7328 2.6102 0.6288 2.6313 0.5281 2.6615 0.4324 2.6991 0.3430
	2.7424 0.2606 2.7899 0.1853 2.8401 0.1171 2.8919 0.0555 2.9444 0
    }
    log10 {
	1.2788 0.6822 1.2559 0.6581 1.2334 0.6313 1.2116 0.6017 1.1910 0.5690
	1.1722 0.5332 1.1559 0.4944 1.1428 0.4528 1.1336 0.4091 1.1288 0.3639
	1.1288 0.3183 1.1336 0.2731 1.1428 0.2293 1.1559 0.1878 1.1722 0.1490
	1.1910 0.1132 1.2116 0.0805 1.2334 0.0509 1.2559 0.0241 1.2788 0
    }
    log2 {
	4.2479 2.2662 4.1721 2.1861 4.0974 2.0972 4.0249 1.9988 3.9564 1.8902
	3.8940 1.7713 3.8397 1.6423 3.7962 1.5043 3.7657 1.3590 3.7499 1.2090
	3.7499 1.0572 3.7657 0.9072 3.7962 0.7619 3.8397 0.6238 3.8940 0.4949
	3.9564 0.3760 4.0249 0.2674 4.0974 0.1690 4.1721 0.0801 4.2479 0
    }
    neg {
	=   0 -19 = -1 -18 =  -2 -17 =  -3 -16 =  -4 -15 =
	=  -5 -14 = -6 -13 =  -7 -12 =  -8 -11 =  -9 -10 =
	= -10  -9 = -11 -8 = -12  -7 = -13  -6 = -14  -5 =
	= -15  -4 = -16 -3 = -17  -2 = -18  -1 = -19   0 =
    }
    reciproc {
	0      -0.0526 0.0031 -0.0554 0.0068 -0.0580 0.0113 -0.0604 0.0166 -0.0622
	0.0226 -0.0633 0.0293 -0.0634 0.0363 -0.0622 0.0432 -0.0595 0.0497 -0.0552
	0.0552 -0.0497 0.0595 -0.0432 0.0622 -0.0363 0.0634 -0.0293 0.0633 -0.0226
	0.0622 -0.0166 0.0604 -0.0113 0.0580 -0.0068 0.0554 -0.0031 0.0526  0
    }
    sign {
	= 0       1	  = 0.0555  0.9985 = 0.1168  0.9932  = 0.1843  0.9829 =
	= 0.2577  0.9662  = 0.3363  0.9417 = 0.4191  0.90796 = 0.5039  0.8638 =
	= 0.5882  0.8087  = 0.66896 0.7433 = 0.7433  0.66896 = 0.8087  0.5882 =
	= 0.8638  0.5039  = 0.90796 0.4191 = 0.9417  0.3363  = 0.9662  0.2577 =
	= 0.9829  0.1843  = 0.9932  0.1168 = 0.9985  0.0555  = 1       0      =
    }
    sin {
	=        0      89241150.4816 27625479.4462 17738116.3641 10982018.1920 -5026003.5877 627003.9941 -4398591.3696
	= -1237000.2523 -1068386.1760  -576603.2205   170566.6797   -61808.5792   212396.0967  53463.8584    61350.6021
	=    29618.4879    -4355.8448     4538.7569   -10034.4898    -2204.1244    -3399.5335  -1490.4646        6.5964
	=     -294.2121      462.6987       84.7543      183.0440       73.5129       10.1463     17.7582      -20.7318
	=       -2.8985       -9.5937       -3.6170       -0.9980       -1.1588        0.7760      0.1499        0
    }
    sinh {
	=        0             0.1499        0.7760       -1.1588       -0.9980       -3.6170       -9.5937       -2.8985
	=      -20.7318      17.7582        10.1463       73.5129      183.0440       84.7543      462.6987     -294.2121
        =        6.5964   -1490.4646     -3399.5335    -2204.1244   -10034.4898     4538.7569    -4355.8448    29618.4879
	=    61350.6021   53463.8584    212396.0967   -61808.5792   170566.6797  -576603.2205 -1068386.1760 -1237000.2523
        = -4398591.3696  627003.9941  -5026003.5877 10982018.1920 17738116.3641 27625479.4462 89241150.4816        0
    }
    sqrt {
	3.0822 3.0822 3.0845 2.9179 3.0917 2.7493 3.1047 2.5767 3.1244 2.4004
	3.1517 2.2210 3.1873 2.0393 3.2321 1.8564 3.2864 1.6735 3.3506 1.4923
	3.4244 1.3141 3.5072 1.1405 3.5981 0.9727 3.6958 0.8117 3.7991 0.6581
	3.9067 0.5119 4.0174 0.3734 4.1302 0.2421 4.2443 0.1178 4.3589 0
    }
    tan {
	=  0      1      0      1      0      1       0      1      0      1
	=  0      1      0      1      0      1       0      1      0      1
	=  0      1      0      1      0      1       0      1      0      1.0001
	= -0.0007 0.9999 0.0027 0.9959 0.0200 1.0314 -0.2729 0.9980 0.1516 0
    }
    tanh {
	0      0.1516 0.9980 -0.2729 1.0314 0.0200 0.9959 0.0027 0.9999 -0.0007
	1.0001 0      1       0      1      0      1      0      1       0
	1      0      1       0      1      0      1      0      1       0
	1      0      1       0      1      0      1      0      1       0
    }
    tocartesian {
	=  0        0      =   0.6603 -0.7510 = -0.5503 -1.9228 = -2.8730 -0.8637 = -3.0388   2.6012 =
	=  0.6837   4.9530 =   5.4447  2.5210 =  5.9070 -3.7560 =  0.0354 -7.9999 = -7.5516  -4.8962 =
	= -9.1113   4.1212 =  -1.6005 10.8829 =  9.0468  7.8838 = 12.4822 -3.6324 =  3.9713 -13.4249 =
	= -9.8047 -11.3520 = -15.8399  2.2579 = -7.0745 15.4581 =  9.7254 15.1465 = 19        0      =
    }
    topolar     {
	= 19      1.5708 = 18.0278 1.5153 = 17.1172 1.45369 = 16.2788 1.3854 = 15.5242 1.3102  =
	= 14.8661 1.2278 = 14.3178 1.1384 = 13.8924 1.0427  = 13.6015 0.9420 = 13.4536 0.83798 =
	= 13.4536 0.7328 = 13.6015 0.6288 = 13.8924 0.5281  = 14.3178 0.4324 = 14.8661 0.3430  =
	= 15.5242 0.2606 = 16.2788 0.1854 = 17.1172 0.1171  = 18.0278 0.0555 = 19      0       =
    }
} {
    # functions to debug ...
    if {![llength $expected] || ($op in {})} {
	puts   "\nXX $op ........................................................................"
	puts   "XX INPUT [pixels/ $a]"
	puts   "XX RESLT [4f [pixels/ [aktive op cmath $op $a]]]"
	puts   "XX EXP.. $expected\n"
    }

    test aktive-op-cmath-${op}-2.0 "aktive op cmath $op" -body {
	astcl aktive op cmath $op $a
    } -match image -result [makei op::cmath::$op 0 0 20 1 2 {} $expected]
}

# # ## ### ##### ######## ############# #####################
## cmath sign -- idempotent

test aktive-op-cmath-sign-3.0 "aktive op cmath sign, idempotent" -body {
    astcl aktive op cmath sign [aktive op pass [aktive op cmath sign $a]]
} -match image -result [astcl aktive op cmath sign $a]

test aktive-op-cmath-sign-3.1 "aktive op cmath sign, idempotent, dag" -body {
    dag aktive op cmath sign [aktive op cmath sign $a]
} -match glob -result "op::cmath::sign * {} {op::montage::*}"

##
# # ## ### ##### ######## ############# #####################
unset real imaginary a
cleanupTests
return
