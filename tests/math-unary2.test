# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023,2024 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Unary transformers with 2 parameters

kt check Tcl     8.6 9
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    inside-oo  {src args}
    inside-oc  {src args}
    inside-co  {src args}
    inside-cc  {src args}
    outside-oo {src args}
    outside-oc {src args}
    outside-co {src args}
    outside-cc {src args}
    linear     {src args}
} {aktive op math1}

syntax {
    mean-stddev {src args}
    min-max     {src args}
    stretch     {src args}
} {aktive op math1 fit}

# # ## ### ##### ######## ############# #####################
##

set in [aktive image gradient width 7 height 1 depth 1 first -3 last 3]

# # ## ### ##### ######## ############# #####################

#              -3 -2 -1 0 1 2 3
foreach {fun expected} {
    inside-oo  {0 0 0 1 0 0 0}
    inside-oc  {0 0 0 1 1 0 0}
    inside-co  {0 0 1 1 0 0 0}
    inside-cc  {0 0 1 1 1 0 0}
    outside-oo {1 1 1 0 1 1 1}
    outside-oc {1 1 1 0 0 1 1}
    outside-co {1 1 0 0 1 1 1}
    outside-cc {1 1 0 0 0 1 1}
} {
    # puts   "\nXX $fun ........................................................................"
    # puts   "XX INPUT [pixels aktive image gradient 7 1 1 -3 3]"
    # puts   "XX RESLT [pixels aktive op math1 $fun [aktive image gradient 7 1 1 -3 3]]"
    # puts   "XX EXP.. $expected\n"

    test aktive-op-math1-${fun}-2.0 "aktive math1 $fun" -body {
	astcl aktive op math1 $fun $in low -1 high 1
    } -match image -result [makei op::math1::$fun 0 0 7 1 1 {low -1.0 high 1.0} $expected]

    test aktive-op-math1-${fun}-2.1 "aktive math1 $fun, dag" -body {
	dag aktive op math1 $fun $in low -1 high 1
    } -match glob -result "op::math1::$fun * {*} {image::gradient *}"

    test aktive-op-math1-${fun}-2.2 "aktive math1 $fun, const folding, dag" -body {
	dag aktive op math1 $fun [flat 4] low -1 high 1
    } -match glob -result {image::from::value *}
}

# # ## ### ##### ######## ############# #####################
## linear

set expected {4 3 2 1 0 -1 -2}

test aktive-op-math1-linear-2.0 "aktive math1 linear" -body {
    astcl aktive op math1 linear $in scale -1 gain 1
} -match image -result [makei op::math1::shift 0 0 7 1 1 {offset 1.0} $expected]

test aktive-op-math1-linear-2.1 "aktive math1 linear, dag" -body {
    dag aktive op math1 linear [aktive image gradient width 7 height 1 depth 1 first -3 last 3] scale -1 gain 1
} -match glob -result "op::math1::shift * {offset 1.0} {op::math1::scale * {factor -1.0} {image::gradient *}}"

test aktive-op-math1-linear-2.2 "aktive math1 linear, const folding, dag" -body {
    dag aktive op math1 linear [flat 4] scale -1 gain 1
} -match glob -result {image::from::value *}

# # ## ### ##### ######## ############# #####################
## fit (stretch, min-max, mean-stddev)

test aktive-op-math1-fit-min-max-2.0 "aktive math1 fit min-max (into 0..1)" -body {
    pixels aktive op math1 fit min-max $in
} -match pixels -result {0 0.16667 0.33333 0.5 0.66667 0.83333 1}

test aktive-op-math1-fit-mean-stddev-2.0 "aktive math1 fit mean-stddev (into 0..1)" -body {
    pixels aktive op math1 fit mean-stddev $in
} -match pixels -result {0 0.083333 0.29167 0.5 0.70833 0.91667 1}
#                        -3 -2 -1 0 1 2 3

test aktive-op-math1-fit-stretch-2.0 "aktive math1 fit stretch (into 0..1), clamped (default)" -body {
    pixels aktive op math1 fit stretch $in by {{P 0 {-2 2}}}
} -match pixels -result {0  0  0.25 0.5 0.75 1 1}
#                        -3 -2 -1   0   1    2 3

test aktive-op-math1-fit-stretch-2.1 "aktive math1 stretch (into 0..1), unclamped" -body {
    pixels aktive op math1 fit stretch $in by {{P 0 {-2 2}}} clamp 0
} -match pixels -result {-0.25 0  0.25 0.5 0.75 1 1.25}
#                        -3    -2 -1   0   1    2 3

# # ## ### ##### ######## ############# #####################

unset in fun expected
cleanupTests
return
