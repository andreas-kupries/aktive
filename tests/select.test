# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2023 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## AKTIVE. Selection of rows, columns, bands

kt check Tcl     8.6
kt check tcltest 2

# # ## ### ##### ######## ############# #####################

kt local testing aktive

kt source support/util.tcl

# # ## ### ##### ######## ############# #####################
## Syntax

syntax {
    x {first last src}
    y {first last src}
    z {first last src}
} {aktive op select}

# # ## ### ##### ######## ############# #####################
##
# input/gradient 3x4x2
##
##       0 ....   1......   2...... - 3 columns
##     --------  --------  --------
#	 1  1.5    2  2.5    3  3.5  0
#	 4  4.5    5  5.5    6  6.5  1
#	 7  7.5    8  8.5    9  9.5  2
#	10 10.5   11 11.5   12 12.5  3
##     --- ----  --- ----  --- ----  \ 4 rows
##      0. 1...   0. 1...   0. 1... - 2 bands
#
# Selecting column, row, or band 1

foreach {op dim thing domain expected} {
    x width column {1 0 1 4 2} {
	2  2.5
	5  5.5
	8  8.5
	11 11.5
    }
    y height row {0 1 3 1 2} {
	4 4.5 = 5 5.5 = 6 6.5
    }
    z depth band {0 0 3 4 1} {
	=  1.5 =  2.5 =  3.5 =
	=  4.5 =  5.5 =  6.5 =
	=  7.5 =  8.5 =  9.5 =
	= 10.5 = 11.5 = 12.5 =
    }
} {
    test aktive-op-select-${op}-2.0 "aktive op select $op" -body {
	astcl aktive op select $op 1 1 [grad]
    } -match image -result [makei op::select::$op {*}$domain {first 1 last 1} $expected]

    test aktive-op-select-${op}-2.1 "aktive op select $op, dag" -body {
	dag aktive op select $op 1 1 [grad]
    } -match glob -result "op::select::$op * {image::gradient *}"

    set in    [grad]
    set id    [aktive query id $in]
    set range [aktive query $dim $in] ; incr range -1

    test aktive-op-select-${op}-2.2 "aktive op select $op, pass through dag" -body {
	dag aktive op select $op 0 $range $in
    } -match glob -result "image::gradient $id *"

    unset in range

    test aktive-op-select-${op}-3.0 "aktive op select $op, first > range" -body {
	aktive op select $op 5 6 [flat 0]
    } -returnCodes error -match glob -result "First $thing >= *"

    test aktive-op-select-${op}-3.1 "aktive op select $op, last > range" -body {
	aktive op select $op 1 6 [flat 0]
    } -returnCodes error -match glob -result "Last $thing >= *"

    test aktive-op-select-${op}-3.2 "aktive op select $op, first > last" -body {
	aktive op select $op 1 0 [flat 0]
    } -returnCodes error -result "First $thing is after last"
}

# # ## ### ##### ######## ############# #####################
cleanupTests
return
