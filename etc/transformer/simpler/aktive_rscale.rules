## -*- mode: tcl ; fill-column: 90 -*-
# # ## ### ##### ######## ############# #####################
## aktive_rscale -- op math1 reciproc-scale :: factor / I
##
## [x] <=> I[i] == x, for all pixels i IOW I is constant with value x
#
## 
## 0 / [0] = [Inf]
## 0 / I   = [0]			No, if and only if I[i] != 0, for all pixels i
## 1 / [1] = [1] = I
## 1 / [0] = [inf]
## 1 / I   = as such, reciproc

simplify for  param factor == 0   src/const 0   returns const Inf
simplify for  param factor == 1   src/const 1   returns src
simplify for  param factor == 1   src/const 0   returns const Inf
simplify for  param factor == 1                 returns op math1 reciproc

# Chains: rscale(b, rscale (a, I)) = b / (a / I) = (b/a) * I = scale (b/a, I)

simplify for   src/type @self   \
    src/value  factor __a \
    calc __ab {$factor / $__a}  \
    src/pop \
    returns op math1 scale : factor __ab

# Chains: rscale(b, scale (a, I)) = b / (a * I) = (b/a) / I = rscale (b/a, I)

simplify for   src/type op::math1::scale   \
    src/value  factor __a \
    calc __ab {$factor / $__a}  \
    src/pop \
    returns op math1 reciproc-scale : factor __ab
