## -*- mode: tcl ; fill-column: 90 -*-
# # ## ### ##### ######## ############# #####################
## aktive_scale -- op math1 scale :: I * factor
##
## [x] <=> I[i] == x, for all pixels i IOW I is constant with value x

## I   * 1 =       I
## [0] * 0 = [0] = I
## I   * 0 = [0]

simplify for   param factor == 1               returns src
simplify for   param factor == 0 src/const 0   returns src
simplify for   param factor == 0               returns const 0

# Chains: scale (b, scale (a, I)) = (I * a) * b = I * (a*b) = scale (ab, I)

simplify for   src/type @self   \
    src/value  factor __a \
    calc __ab {$factor * $__a}  \
    src/pop \
    returns unary1 scale __ab

# Chains: scale (b, rscale (a, I)) = (a / I) * b = (a*b) / I = rscale (ab, I)

simplify for   src/type op::math1::reciproc-scale   \
    src/value  factor __a \
    calc __ab {$factor * $__a}  \
    src/pop \
    returns unary1 reciproc-scale __ab
